#include "stdafx.h"
#include <iostream>
#include <fstream>
#include <string>

using namespace std;


/*
int getndigit(double n, int d) {
return (int) fmod((n / pow(10.0, d - 1)), 10.0);
}
int l13dp(double * x) {
int * y = new int[1000];
for (int i = 0; i < 40; i++) {
for (int j = 0; j < 25; j++) {
y[i * 25 + j] = getndigit(x[i], 25 - j);
cout << y[i * 25 + j];
}
cout << endl;
}
return 0;
}
int main() {
double * x = new double[40];
x[0] = 7316717653133062491922511.0;
x[1] = 9674426574742355349194934.0;
x[2] = 9698352031277450632623957.0;
x[3] = 8318016984801869478851843.0;
x[4] = 8586156078911294949545950.0;
x[5] = 1737958331952853208805511.0;
x[6] = 1254069874715852386305071.0;
x[7] = 5693290963295227443043557.0;
x[8] = 6689664895044524452316173.0;
x[9] = 1856403098711121722383113.0;
x[10] = 6222989342338030813533627.0;
x[11] = 6614282806444486645238749.0;
x[12] = 3035890729629049156044077.0;
x[13] = 2390713810515859307960866.0;
x[14] = 7017242712188399879790879.0;
x[15] = 2274921901699720888093776.0;
x[16] = 6572733300105336788122023.0;
x[17] = 5421809751254540594752243.0;
x[18] = 5258490771167055601360483.0;
x[19] = 9586446706324415722155397.0;
x[20] = 5369781797784617406495514.0;
x[21] = 9290862569321978468622482.0;
x[22] = 8397224137565705605749026.0;
x[23] = 1407972968652414535100474.0;
x[24] = 8216637048440319989000889.0;
x[25] = 5243450658541227588666881.0;
x[26] = 1642717147992444292823086.0;
x[27] = 3465674813919123162824586.0;
x[28] = 1786645835912456652947654.0;
x[29] = 5682848912883142607690042.0;
x[30] = 2421902267105562632111110.0;
x[31] = 9370544217506941658960408.0;
x[32] = 0719840385096245544436298.0;
x[33] = 1230987879927244284909188.0;
x[34] = 8458015616609791913387549.0;
x[35] = 9200524063689912560717606.0;
x[36] = 0588611646710940507754100.0;
x[37] = 2256983155200055935729725.0;
x[38] = 7163626956188267042825248.0;
x[39] = 3600823257530420752963450.0;
int extra = l13dp(x);
return 0;
}
*/



int main() {
	string * tokens = new string[16000];
	char * token = new char[CHAR_MAX];
	char * next_token = new char[CHAR_MAX];
	int i = 1;

	string line;
	ifstream input("input_22.txt");
	char * cstr = new char[line.length() + 1];
	if (input.is_open()) {
		while (getline(input, line)) {
			strcpy_s(cstr, line.length() + 1, line.c_str());
			token = strtok_s(cstr, "\",\"", &next_token);
			while (token) {
				string tstr(token);
				tokens[i] = tstr;
				token = strtok_s(NULL, "\",\"", &next_token);
				i++;
			}
		}
		input.close();
	}

	ofstream output("output_22.txt");
	if (output.is_open()) {
		for (int i = 1; i <= 1000; i++) {
			output << tokens[i].c_str() << endl;
		}

		output.close();
	}

	return 0;
}